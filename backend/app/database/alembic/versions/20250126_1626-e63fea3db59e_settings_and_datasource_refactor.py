"""settings and datasource refactor

Revision ID: e63fea3db59e
Revises: 0e2faeae15a8
Create Date: 2025-01-26 16:26:03.584281

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision: str = 'e63fea3db59e'
down_revision: Union[str, None] = '0e2faeae15a8'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('processing_stacks')
    op.drop_table('files')
    op.drop_table('processing_steps')
    op.drop_table('settings')
    op.drop_table('processing_stack_steps')
    op.drop_table('datasources')
    op.drop_table('folders')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('folders',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.Column('path', sa.VARCHAR(), nullable=False),
    sa.Column('parent_id', sa.INTEGER(), nullable=True),
    sa.Column('uploaded_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('accessed_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('original_path', sa.VARCHAR(), nullable=False),
    sa.ForeignKeyConstraint(['parent_id'], ['folders.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('original_path', name='uq_folders_original_path'),
    sa.UniqueConstraint('path')
    )
    op.create_table('datasources',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('identifier', sa.VARCHAR(), nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.Column('type', sa.VARCHAR(), nullable=False),
    sa.Column('description', sa.VARCHAR(), nullable=True),
    sa.Column('settings', sqlite.JSON(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('root_folder_id', sa.INTEGER(), nullable=True),
    sa.Column('embedding_provider', sa.VARCHAR(), nullable=False),
    sa.Column('embedding_settings', sqlite.JSON(), nullable=False),
    sa.ForeignKeyConstraint(['root_folder_id'], ['folders.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('identifier')
    )
    op.create_table('processing_stack_steps',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('stack_identifier', sa.VARCHAR(), nullable=True),
    sa.Column('step_identifier', sa.VARCHAR(), nullable=True),
    sa.Column('order', sa.INTEGER(), nullable=False),
    sa.Column('parameters', sqlite.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['stack_identifier'], ['processing_stacks.identifier'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['step_identifier'], ['processing_steps.identifier'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('settings',
    sa.Column('identifier', sa.VARCHAR(), nullable=False),
    sa.Column('display_name', sa.VARCHAR(), nullable=False),
    sa.Column('description', sa.VARCHAR(), nullable=True),
    sa.Column('value', sqlite.JSON(), nullable=False),
    sa.PrimaryKeyConstraint('identifier')
    )
    op.create_table('processing_steps',
    sa.Column('identifier', sa.VARCHAR(), nullable=False),
    sa.Column('display_name', sa.VARCHAR(), nullable=False),
    sa.Column('description', sa.VARCHAR(), nullable=True),
    sa.Column('type', sa.VARCHAR(), nullable=False),
    sa.Column('parameters_schema', sqlite.JSON(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.PrimaryKeyConstraint('identifier')
    )
    op.create_table('files',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.Column('path', sa.VARCHAR(), nullable=False),
    sa.Column('mime_type', sa.VARCHAR(), nullable=True),
    sa.Column('size', sa.INTEGER(), nullable=True),
    sa.Column('status', sa.VARCHAR(length=10), nullable=False),
    sa.Column('processed_stacks', sqlite.JSON(), nullable=True),
    sa.Column('stacks_to_process', sqlite.JSON(), nullable=True),
    sa.Column('processing_started_at', sa.DATETIME(), nullable=True),
    sa.Column('file_created_at', sa.DATETIME(), nullable=False),
    sa.Column('file_modified_at', sa.DATETIME(), nullable=False),
    sa.Column('uploaded_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('accessed_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('ref_doc_ids', sqlite.JSON(), nullable=True),
    sa.Column('folder_id', sa.INTEGER(), nullable=True),
    sa.Column('original_path', sa.VARCHAR(), nullable=False),
    sa.Column('error_message', sa.VARCHAR(), nullable=True),
    sa.ForeignKeyConstraint(['folder_id'], ['folders.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('original_path', name='uq_files_original_path'),
    sa.UniqueConstraint('path')
    )
    op.create_table('processing_stacks',
    sa.Column('identifier', sa.VARCHAR(), nullable=False),
    sa.Column('display_name', sa.VARCHAR(), nullable=False),
    sa.Column('description', sa.VARCHAR(), nullable=True),
    sa.Column('is_enabled', sa.BOOLEAN(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.Column('supported_extensions', sqlite.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('identifier')
    )
    # ### end Alembic commands ###
