name: idapt
services:
  # Ollama is used as the LLM model provider for the backend.
  ollama:
    container_name: ollama
    image: ollama/ollama:latest
    networks:
      - idapt-backend-network
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              capabilities: ["gpu"]
              count: all
    volumes:
      - ollama_data:/root/.ollama # Store the models in a volume so that we don't download them again at each rebuild
    restart: always
    runtime: nvidia

  # Postgres is used as the database for the backend.
  postgres:
    image: postgres:latest
    container_name: postgres
    build:
      context: ./postgres
      dockerfile: ./Dockerfile
    networks:
      - idapt-backend-network
    volumes:
      - postgres_data:/var/lib/postgresql/data # Store the database data in a volume so that we don't lose it at each rebuild
    env_file:
      - ./postgres/.env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} -h localhost || exit 1"]
      interval: 2s
      timeout: 5s
      retries: 20

  # The backend is the main service of the application.
  idapt-backend:
    build:
      context: ./backend
      dockerfile: ./Dockerfile
    container_name: idapt-backend
    networks:
      - idapt-backend-network
      - idapt-frontend-network
    env_file:
      - ./postgres/.env # Used to get the default superuser password and other variables.
      - ./backend/.env
      - ./.env # To pass the prod variable.
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/api/health"]
      interval: 2s
      timeout: 5s
      retries: 20

  # The frontend is the main service of the application.
  idapt-frontend:
    build:
      context: ./frontend
      dockerfile: ./Dockerfile
    container_name: idapt-frontend
    ports:
      - "3030:3030" # Port that the nginx proxy listens to.
    networks:
      - idapt-frontend-network
    env_file:
      - ./frontend/.env
      - ./.env # To pass the prod variable.
    depends_on:
      idapt-backend:
        condition: service_healthy

volumes:
  postgres_data:
  ollama_data:

networks:
  idapt-backend-network:
    attachable: false
    name: idapt-backend-network
    driver: bridge # Change to not allow external access later ?
  idapt-frontend-network:
    attachable: true
    name: idapt-frontend-network
    driver: bridge
