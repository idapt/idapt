name: idapt

services:

  idapt:
    container_name: idapt
    build:
      context: .
      dockerfile: ./Dockerfile
    environment:
      # Frontend variables
      ENVIRONMENT: prod
      NEXT_PUBLIC_HOST_DOMAIN: ${HOST_DOMAIN}
      # Entrypoint script variables
      HOST_DOMAIN: ${HOST_DOMAIN}
      # Container variables
      CERTBOT_EMAIL: ${CERTBOT_EMAIL}
      USE_LOCAL_CA: 0
    env_file:
      - ./nginx/.env
      - ./frontend/.env
      - ./backend/.env
    ports:
      # Expose the nginx listening ports through the host firewall.
      # Add 127.0.0.1 to only open ports locally and not through the host firewall.
      - '80:80/tcp'
      - '443:443/tcp'
      - '443:443/udp'
    networks:
      idapt-external-network: {}
    # Expose the host.docker.internal so that we can access ollama runnning on the localost from the container.
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - nginx_data:/etc/letsencrypt # Persist the certificates.
      - backend_data:/backend_data # The volume where the app data is stored.
      - idapt_data:/data # The volume where the data is stored. Use data mount name to make it shorter.
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://127.0.0.1/api/health && nginx -t || exit 1"]
      interval: 5s
      timeout: 10s
      retries: 3
      start_period: 10s
    restart: always
    # Container security hardening
    security_opt:
      - no-new-privileges:true
    #cap_drop: # TODO
    #  - ALL
    #cap_add:
    #  - NET_BIND_SERVICE  # Only for nginx

volumes:
  backend_data:
  idapt_data:
  nginx_data:

networks:
  idapt-external-network:
    attachable: false
    name: idapt-external-network
    driver: bridge