name: idapt

services:

# Nginx to manage app access and serve static frontend.
  idapt-nginx:
    container_name: idapt-nginx
    build:
      context: ./
      dockerfile: ./nginx/Dockerfile
    environment:
      ENVIRONMENT: prod
      DEPLOYMENT_TYPE: self-hosted
      # Entrypoint script variables
      HOST_DOMAIN: ${HOST_DOMAIN}
      # Container variables
      CERTBOT_EMAIL: ${CERTBOT_EMAIL}
    ports:
      # Expose the nginx listening ports through the host firewall.
      # Add 127.0.0.1 to only open ports locally and not through the host firewall.
      - '80:80'
      - '443:443'
    # Nginx has access to every container exposed via their own network for routing.
    networks:
      idapt-network: {}
    volumes:
      - frontend-certs:/etc/letsencrypt
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 1s
      timeout: 5s
      retries: 30
    restart: unless-stopped
    # Container security hardening
    security_opt:
      - no-new-privileges:true
    #cap_drop: # TODO
    #  - ALL
    #cap_add:
    #  - NET_BIND_SERVICE  # Only for nginx


  idapt-backend:
    container_name: idapt-backend
    build:
      context: ./backend
      dockerfile: ./Dockerfile
    ports:
      - "8000:8000"
    environment:
      ENVIRONMENT: prod
      # Entrypoint script variables
      HOST_DOMAIN: ${HOST_DOMAIN}
      ANONYMIZED_TELEMETRY: False # For chromadb
    networks:
      idapt-network: {}
    # Expose the host.docker.internal so that we can access ollama runnning on the localost from the container.
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - user-data:/data # The volume where the data is stored. Use data mount name to make it shorter.
      - backend-certs:/certs # Needed to store, share and generate the certs
    healthcheck:
      test: ["CMD", "curl", "-f", "https://localhost:8000/api/health"]
      interval: 5s
      timeout: 10s
      retries: 3
      start_period: 10s
    restart: unless-stopped
    # Container security hardening
    security_opt:
      - no-new-privileges:true
    #cap_drop: # TODO
    #  - ALL
    #cap_add:
    #  - NET_BIND_SERVICE  # Only for nginx

volumes:
  user-data:
  backend-certs:
  frontend-certs:
networks:
  idapt-network:
    name: idapt-network
    driver: bridge